@startuml 

class Game {
  - window: sf::RenderWindow
  - paddle: Paddle
  - ball: Ball
  - level: Level
  - windowWidth: unsigned int
  - windowHeight: unsigned int
  + run()
  + processEvents()
  + update(dt: float)
  + render()
  + handleCollisions()
  + reset()
}

class Paddle {
  - shape: sf::RectangleShape
  - speed: float
  + Paddle(x: float, y: float, width: float, height: float)
  + move(dx: float)
  + update(dt: float, window: const sf::RenderWindow &)
  + draw(window: sf::RenderWindow &) const
  + getBounds() const
  + reset(x: float, y: float)
}

class Ball {
  - shape: sf::CircleShape
  - velocity: sf::Vector2f
  - speed: float
  + Ball(x: float, y: float, radius: float)
  + update(dt: float)
  + draw(window: sf::RenderWindow &) const
  + getBounds() const
  + setPosition(x: float, y: float)
  + invertVelocityX()
  + invertVelocityY()
  + reset(x: float, y: float)
  + getVelocity() const
}

class Brick {
  - shape: sf::RectangleShape
  - destroyed: bool
  + Brick(x: float, y: float, width: float, height: float)
  + draw(window: sf::RenderWindow &) const
  + getBounds() const
  + destroy()
  + isDestroyed() const
}

class Level {
  - bricks: std::vector<Brick>
  + loadDefault()
  + getBricks(): std::vector<Brick>&
  + draw(window: sf::RenderWindow &) const
}

Game "1" o-- "1" Paddle
Game "1" o-- "1" Ball
Game "1" o-- "1" Level
Level "1" *-- "1..*" Brick

@enduml